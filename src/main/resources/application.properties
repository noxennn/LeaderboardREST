spring.application.name=LeaderboardREST
spring.data.redis.host=localhost
spring.data.redis.port=6379

spring.profiles.active=caffeine

springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Log level control
logging.level.root=INFO
logging.level.com.yebyrkc.LeaderboardREST=INFO

# Write logs to a file


# Optional: Log pattern (adds timestamp automatically)
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
# Increase threads
server.tomcat.max-threads=2000

# Increase request queue (waiting before threads are free)
server.tomcat.accept-count=1000
server.tomcat.max-connections=20000
# Increase timeout so slow clients don?t kill connection
server.tomcat.connection-timeout=30000
management.endpoints.web.exposure.include=prometheus,health,info,metrics
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

logging.level.org.springframework.web=DEBUG
logging.level.com.yebyrkc.LeaderboardREST.service=TRACE

# Lettuce pooling
spring.redis.lettuce.pool.max-active=300
spring.redis.lettuce.pool.max-idle=100
spring.redis.lettuce.pool.min-idle=20
spring.redis.lettuce.pool.max-wait=PT10S

# Prevent Lettuce from timing out idle sockets too aggressively
spring.redis.timeout=PT60S